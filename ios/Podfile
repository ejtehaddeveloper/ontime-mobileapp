# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip



platform :ios, '16.0'
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Salons' do
  config = use_native_modules!

  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true

  )
  

  pod 'Firebase/Core', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true


  target 'SalonsTests' do
    inherit! :complete
    # Pods for testing
  end

  
end

post_install do |installer|
  react_native_post_install(installer, config[:reactNativePath]) if defined?(react_native_post_install)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      ldf = config.build_settings['OTHER_LDFLAGS'] || ''
      unless ldf.to_s.include?('-framework CoreAudioTypes')
        config.build_settings['OTHER_LDFLAGS'] = \"#{ldf} -framework CoreAudioTypes\"
      end
      if config.build_settings['OTHER_LDFLAGS'].is_a?(Array)
        config.build_settings['OTHER_LDFLAGS'] = config.build_settings['OTHER_LDFLAGS'].uniq
      else
        config.build_settings['OTHER_LDFLAGS'] = config.build_settings['OTHER_LDFLAGS'].to_s
      end
    end
  end
end

